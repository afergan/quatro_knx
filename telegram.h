/*
 * telegram.h
 *
 * Created: 18-8-2016 14:34:05
 *  Author: Paul
 */ 


#ifndef TELEGRAM_H_
#define TELEGRAM_H_

#include "clocks.h"


typedef enum {
	KNX_PHYSICAL_ADDRESS,
	KNX_GROUP_ADDRESS
} address_type_e;

typedef enum {
	KNX_REPEAT = 0x0,
	KNX_FIRST = 0x1
} repeat_e;

typedef enum {
	KNX_SYSTEM = 0x0,
	KNX_HIGH = 0x1,
	KNX_ALARM = 0x2,
	KNX_LOW = 0x3
} priority_e;

typedef enum {
	KNX_UDP = 0x0,
	KNX_NDP = 0x1,
	KNX_UCD = 0x2,
	KNX_NCD = 0x3
} tpci_e;

typedef enum {
	P2P_CONNECT_REQ = 0x0,
	P2P_DISCONNECT_REQ = 0x1,
	ACK_NUMBERED_TELEGRAM = 0x2,
	NACK_NUMBERED_TELEGRAM = 0x3,
	P2P_CONNECTED = 0x4,
	P2P_CONNECTIONLESS = 0x5
} p2p_e;

typedef enum {
	MESSAGE_MULTICAST,
	MESSAGE_BROADCAST,
	MESSAGE_UNICAST
} message_type_e;

typedef enum {
	// multicast
	KNX_GROUP_VALUE_READ = 0x0,
	KNX_GROUP_VALUE_RESPONSE = 0x1,
	KNX_GROUP_VALUE_WRITE = 0x2,
	// broadcast
	KNX_INDIVIDUAL_ADDR_WRITE = 0x3,
	KNX_INDIVIDUAL_ADDR_REQ = 0x4,
	KNX_INDIVIDUAL_ADDR_RESPONSE = 0x5,
	// P2P connection oriented
	KNX_ADC_READ = 0x6,
	KNX_ADC_RESPONSE = 0x7,
	KNX_MEMORY_READ = 0x8,
	KNX_MEMORY_RESPONSE = 0x9,
	KNX_MEMORY_WRITE = 0xA,
	// P2P connection oriented
	KNX_USER_MESSAGE = 0xB,
	KNX_MASK_VERSION_READ = 0xC,
	KNX_MASK_VERSION_RESPONSE = 0xD,
	// P2P connection oriented
	KNX_RESTART = 0xE,
	// other
	KNX_ESCAPE = 0xF
} apci_e;

typedef enum {
	// P2P connection oriented
	KNX_ESCAPE_OPEN_ROUTING_TABLE = 0b000000,
	KNX_ESCAPE_READ_ROUTING_TABLE_REQUEST = 0b000001,
	KNX_ESCAPE_READ_ROUTING_TABLE_RESPONSE = 0b000010,
	KNX_ESCAPE_WRITE_ROUTING_TABLE = 0b000011,
	KNX_ESCAPE_READ_ROUTING_TABLE_MEMORY_REQUEST = 0b001000,
	KNX_ESCAPE_READ_ROUTING_TABLE_MEMORY_RESPONSE = 0b001001,
	KNX_ESCAPE_WRITE_ROUTING_TABLE_MEMORY = 0b001010,
	KNX_ESCAPE_READ_ROUTER_STATUS_REQUEST = 0b001101,
	KNX_ESCAPE_READ_ROUTER_STATUS_RESPONSE = 0b001110,
	KNX_ESCAPE_WRITE_ROUTER_STATUS = 0b001111,
	KNX_ESCAPE_BIT_WRITE = 0b010000,
	KNX_ESCAPE_AUTHORIZE_REQ = 0b010001,
	KNX_ESCAPE_AUTHORIZE_RESPONSE = 0b010010,
	KNX_ESCAPE_SET_KEY_REQ = 0b010011,
	KNX_ESCAPE_SET_KEY_RESPONSE = 0b010100,
	// P2P connectionless & P2P connection oriented
	KNX_ESCAPE_PROPERTY_REQ = 0b010101,
	KNX_ESCAPE_PROPERTY_RESPONSE = 0b010110,
	KNX_ESCAPE_PROPERTY_WRITE = 0b010111,
	KNX_ESCAPE_PROPERTY_DESCR_REQ = 0b011000,
	KNX_ESCAPE_PROPERTY_DESCR_RESPONSE = 0b011001,
	// broadcast
	KNX_ESCAPE_NETWORK_PARAMETER_READ = 0b011010,
	// broadcast & P2P connectionless
	KNX_ESCAPE_NETWORK_PARAMETER_INFO_REPORT = 0b011011,
	// broadcast
	KNX_ESCAPE_INDIVIDUAL_ADDRESS_SERIAL_NUMBER_READ = 0b011100,
	KNX_ESCAPE_INDIVIDUAL_ADDRESS_SERIAL_NUMBER_RESPONSE = 0b011101,
	KNX_ESCAPE_INDIVIDUAL_ADDRESS_SERIAL_NUMBER_WRITE = 0b011110,
	// broadcast & system broadcast
	KNX_ESCAPE_DOMAIN_ADDRESS_WRITE = 0b100000,
	KNX_ESCAPE_DOMAIN_ADDRESS_REQ = 0b100001,
	KNX_ESCAPE_DOMAIN_ADDRESS_RESPONSE = 0b100010,
	KNX_ESCAPE_DOMAIN_ADDRESS_SELECTIVE_READ = 0b100011,
	// P2P connectionless & broadcast
	KNX_ESCAPE_NETWORK_PARAMETER_WRITE = 0b100100,
	// P2P connectionless & P2P connection oriented
	KNX_ESCAPE_LINK_READ = 0b100101,
	KNX_ESCAPE_LINK_RESPONSE = 0b100110,
	KNX_ESCAPE_LINK_WRITE = 0b100111,
	// multicast
	KNX_ESCAPE_GROUP_PROP_VALUE_READ = 0b101000,
	KNX_ESCAPE_GROUP_PROP_VALUE_RESPONSE = 0b101001,
	KNX_ESCAPE_GROUP_PROP_VALUE_WRITE = 0b101010,
	KNX_ESCAPE_GROUP_PROP_INFO_REPORT = 0b101011,
	// broadcast & system broadcast
	KNX_ESCAPE_DOMAIN_ADDRESS_SERIAL_NUMBER_READ = 0b101100,
	KNX_ESCAPE_DOMAIN_ADDRESS_SERIAL_NUMBER_RESPONSE = 0b101101,
	KNX_ESCAPE_DOMAIN_ADDRESS_SERIAL_NUMBER_WRITE = 0b101110
} escape_apdu_e;


typedef enum {
	// P2P connection oriented
	KNX_USER_MEMORY_READ = 0b000000,
	KNX_USER_MEMORY_RESPONSE = 0b000001,
	KNX_USER_MEMORY_WRITE = 0b000010,
	KNX_USER_MEMORY_WRITE_40_BIT = 0b000100,
	KNX_USER_MANUFACTURER_REQ = 0b000101,
	KNX_USER_MANUFACTURER_RESPONSE = 0b000110,
	// P2P connectionless & P2P connection oriented
	KNX_USER_FUNCTION_PROPERTY_COMMAND = 0b000111,
	KNX_USER_FUNCTION_PROPERTY_STATE_READ = 0b001000,
	KNX_USER_FUNCTION_PROPERTY_STATE_RESPONSE = 0b001001
} user_apdu_e;

#endif /* TELEGRAM_H_ */